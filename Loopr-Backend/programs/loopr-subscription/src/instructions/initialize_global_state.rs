use anchor_lang::prelude::*;use crate::state::*;#[derive(Accounts)]pub struct InitializeGlobalState<'info> {    #[account(        init,        payer = authority,        space = GlobalState::LEN,        seeds = [b"global_state"],        bump    )]    pub global_state: Account<'info, GlobalState>,        #[account(mut)]    pub authority: Signer<'info>,        pub system_program: Program<'info, System>,}pub fn handler(ctx: Context<InitializeGlobalState>) -> Result<()> {    let global_state = &mut ctx.accounts.global_state;    global_state.authority = ctx.accounts.authority.key();    global_state.total_plans = 0;    global_state.total_subscriptions = 0;    global_state.total_payments_processed = 0;    global_state.total_volume = 0;    global_state.is_paused = false;    global_state.bump = ctx.bumps.global_state;    msg!("Global state initialized");    Ok(())}